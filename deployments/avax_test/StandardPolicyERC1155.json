{
  "address": "0x5B401c76BF9A2C7AFa833921f13D1c335BB99f95",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "matchingPolicy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint16",
                  "name": "rate",
                  "type": "uint16"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct Fee[]",
              "name": "fees",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraParams",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "makerAsk",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "matchingPolicy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint16",
                  "name": "rate",
                  "type": "uint16"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct Fee[]",
              "name": "fees",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraParams",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "takerBid",
          "type": "tuple"
        }
      ],
      "name": "canMatchMakerAsk",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum AssetType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "matchingPolicy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint16",
                  "name": "rate",
                  "type": "uint16"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct Fee[]",
              "name": "fees",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraParams",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "makerBid",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "matchingPolicy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "listingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint16",
                  "name": "rate",
                  "type": "uint16"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct Fee[]",
              "name": "fees",
              "type": "tuple[]"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraParams",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "takerAsk",
          "type": "tuple"
        }
      ],
      "name": "canMatchMakerBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum AssetType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x44b6c91b3f822f6d0e01fd96c1f1ae4218e2589b6a53bb9dc96b78c21e55bfbd",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0x5B401c76BF9A2C7AFa833921f13D1c335BB99f95",
    "transactionIndex": 1,
    "gasUsed": "212360",
    "logsBloom": "0x
    "blockHash": "0x6ca244f86de72ee1c5f090f798a29c8f75a2d13084c7d85419daf95a9ab4a9b9",
    "transactionHash": "0x44b6c91b3f822f6d0e01fd96c1f1ae4218e2589b6a53bb9dc96b78c21e55bfbd",
    "logs": [],
    "blockNumber": 25527031,
    "cumulativeGasUsed": "439376",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cccdf0b470ac700871b8ba2c9b973ab7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"makerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerBid\",\"type\":\"tuple\"}],\"name\":\"canMatchMakerAsk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"makerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"matchingPolicy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"listingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraParams\",\"type\":\"bytes\"}],\"internalType\":\"struct Order\",\"name\":\"takerAsk\",\"type\":\"tuple\"}],\"name\":\"canMatchMakerBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum AssetType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Policy for matching orders at a fixed price for a specific ERC1155 tokenId\",\"kind\":\"dev\",\"methods\":{},\"title\":\"StandardPolicyERC1155\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/matchingPolicies/StandardPolicyERC1155.sol\":\"StandardPolicyERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMatchingPolicy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {Order, AssetType} from \\\"../libraries/Structs.sol\\\";\\n\\ninterface IMatchingPolicy {\\n  function canMatchMakerAsk(\\n    Order calldata makerAsk,\\n    Order calldata takerBid\\n  ) external view returns (bool, uint256, uint256, uint256, AssetType);\\n\\n  function canMatchMakerBid(\\n    Order calldata makerBid,\\n    Order calldata takerAsk\\n  ) external view returns (bool, uint256, uint256, uint256, AssetType);\\n}\\n\",\"keccak256\":\"0x02ae03e89eacabf34ba2652007703f508877f12141fb0e568fb8e528f4371923\",\"license\":\"MIT\"},\"contracts/libraries/Structs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nenum Side {\\n  Buy,\\n  Sell\\n}\\n\\nenum SignatureVersion {\\n  Single,\\n  Bulk\\n}\\n\\nenum AssetType {\\n  ERC721,\\n  ERC1155\\n}\\n\\nstruct Fee {\\n  uint16 rate;\\n  address payable recipient;\\n}\\n\\nstruct Order {\\n  address trader;\\n  Side side;\\n  address matchingPolicy;\\n  address collection;\\n  uint256 tokenId;\\n  uint256 amount;\\n  address paymentToken;\\n  uint256 price;\\n  uint256 listingTime;\\n  /* Order expiration timestamp - 0 for oracle cancellations. */\\n  uint256 expirationTime;\\n  Fee[] fees;\\n  uint256 salt;\\n  bytes extraParams;\\n}\\n\\nstruct Input {\\n  Order order;\\n  uint8 v;\\n  bytes32 r;\\n  bytes32 s;\\n  bytes extraSignature;\\n  SignatureVersion signatureVersion;\\n  uint256 blockNumber;\\n}\\n\\nstruct Auction {\\n  AssetType assetType;\\n  address collection;\\n  uint256 tokenId;\\n  uint256 amount;\\n  address paymentToken;\\n  uint256 minPrice;\\n  uint256 minWinPercent;\\n  uint256 startTime;\\n  uint256 endTime;\\n  uint256 duration;\\n  address owner;\\n  address lastBidder;\\n  uint256 bidPrice;\\n  Fee[] fees;\\n}\\n\\nstruct Sig {\\n  bytes32 r;\\n  bytes32 s;\\n  uint8 v;\\n}\\n\",\"keccak256\":\"0x625be03e2c818f9ba022886375adeba71985b00c553bcb0ec39fbdd0eee23c66\",\"license\":\"MIT\"},\"contracts/matchingPolicies/StandardPolicyERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {Order, AssetType} from \\\"../libraries/Structs.sol\\\";\\nimport {IMatchingPolicy} from \\\"../interfaces/IMatchingPolicy.sol\\\";\\n\\n/**\\n * @title StandardPolicyERC1155\\n * @dev Policy for matching orders at a fixed price for a specific ERC1155 tokenId\\n */\\ncontract StandardPolicyERC1155 is IMatchingPolicy {\\n  function canMatchMakerAsk(\\n    Order calldata makerAsk,\\n    Order calldata takerBid\\n  ) external pure override returns (bool, uint256, uint256, uint256, AssetType) {\\n    return (\\n      (makerAsk.side != takerBid.side) &&\\n        (makerAsk.paymentToken == takerBid.paymentToken) &&\\n        (makerAsk.collection == takerBid.collection) &&\\n        (makerAsk.tokenId == takerBid.tokenId) &&\\n        (makerAsk.matchingPolicy == takerBid.matchingPolicy) &&\\n        (makerAsk.price == takerBid.price),\\n      makerAsk.price,\\n      makerAsk.tokenId,\\n      1,\\n      AssetType.ERC1155\\n    );\\n  }\\n\\n  function canMatchMakerBid(\\n    Order calldata makerBid,\\n    Order calldata takerAsk\\n  ) external pure override returns (bool, uint256, uint256, uint256, AssetType) {\\n    return (\\n      (makerBid.side != takerAsk.side) &&\\n        (makerBid.paymentToken == takerAsk.paymentToken) &&\\n        (makerBid.collection == takerAsk.collection) &&\\n        (makerBid.tokenId == takerAsk.tokenId) &&\\n        (makerBid.matchingPolicy == takerAsk.matchingPolicy) &&\\n        (makerBid.price == takerAsk.price),\\n      makerBid.price,\\n      makerBid.tokenId,\\n      1,\\n      AssetType.ERC1155\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0xb899c4c4c1bad779b669d8836fabf6edb0fb746104d74f832a6570b79b8dc867\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630813a7661461003b578063d5ec8c771461003b575b600080fd5b61004e6100493660046101bc565b610068565b60405161005f959493929190610236565b60405180910390f35b60008080808061007e6040870160208801610283565b600181111561008f5761008f610220565b61009f6040890160208a01610283565b60018111156100b0576100b0610220565b141580156100ed57506100c960e0870160c088016102ab565b6001600160a01b03166100e260e0890160c08a016102ab565b6001600160a01b0316145b8015610128575061010460808701606088016102ab565b6001600160a01b031661011d6080890160608a016102ab565b6001600160a01b0316145b801561013b575085608001358760800135145b8015610176575061015260608701604088016102ab565b6001600160a01b031661016b6060890160408a016102ab565b6001600160a01b0316145b801561018957508560e001358760e00135145b9760e0880135976080013596506001955085945092505050565b60006101a082840312156101b657600080fd5b50919050565b600080604083850312156101cf57600080fd5b823567ffffffffffffffff808211156101e757600080fd5b6101f3868387016101a3565b9350602085013591508082111561020957600080fd5b50610216858286016101a3565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b600060a08201905086151582528560208301528460408301528360608301526002831061027357634e487b7160e01b600052602160045260246000fd5b8260808301529695505050505050565b60006020828403121561029557600080fd5b8135600281106102a457600080fd5b9392505050565b6000602082840312156102bd57600080fd5b81356001600160a01b03811681146102a457600080fdfea164736f6c6343000813000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630813a7661461003b578063d5ec8c771461003b575b600080fd5b61004e6100493660046101bc565b610068565b60405161005f959493929190610236565b60405180910390f35b60008080808061007e6040870160208801610283565b600181111561008f5761008f610220565b61009f6040890160208a01610283565b60018111156100b0576100b0610220565b141580156100ed57506100c960e0870160c088016102ab565b6001600160a01b03166100e260e0890160c08a016102ab565b6001600160a01b0316145b8015610128575061010460808701606088016102ab565b6001600160a01b031661011d6080890160608a016102ab565b6001600160a01b0316145b801561013b575085608001358760800135145b8015610176575061015260608701604088016102ab565b6001600160a01b031661016b6060890160408a016102ab565b6001600160a01b0316145b801561018957508560e001358760e00135145b9760e0880135976080013596506001955085945092505050565b60006101a082840312156101b657600080fd5b50919050565b600080604083850312156101cf57600080fd5b823567ffffffffffffffff808211156101e757600080fd5b6101f3868387016101a3565b9350602085013591508082111561020957600080fd5b50610216858286016101a3565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b600060a08201905086151582528560208301528460408301528360608301526002831061027357634e487b7160e01b600052602160045260246000fd5b8260808301529695505050505050565b60006020828403121561029557600080fd5b8135600281106102a457600080fd5b9392505050565b6000602082840312156102bd57600080fd5b81356001600160a01b03811681146102a457600080fdfea164736f6c6343000813000a",
  "devdoc": {
    "details": "Policy for matching orders at a fixed price for a specific ERC1155 tokenId",
    "kind": "dev",
    "methods": {},
    "title": "StandardPolicyERC1155",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}