{
  "address": "0x3332f97497cf0e094C41FEAaA0312b1123F363eD",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "ApproveContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ClearedBaseFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "DenyContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "GrantApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "id",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "label",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "rate",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receipt",
          "type": "address"
        }
      ],
      "name": "NewBaseFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "RevokeApproval",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "rate",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "addBaseFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "approveContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "baseFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "rate",
          "type": "uint16"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "rate",
              "type": "uint16"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct Fee[]",
          "name": "_fees",
          "type": "tuple[]"
        }
      ],
      "name": "calcuateFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "rate",
              "type": "uint16"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct Fee[]",
          "name": "fees",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "clearBaseFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "denyContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "grantApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "revokedApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferERC20",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferERC721Unsafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "id",
          "type": "uint16"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "rate",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            }
          ],
          "internalType": "struct Sig",
          "name": "sig",
          "type": "tuple"
        }
      ],
      "name": "updateBaseFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "updateSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x40222b5a256c4e81f0255ad67cb9703a6d03f824bc68aa3bf6ba164483c9dfad",
  "receipt": {
    "to": null,
    "from": "0xf5CA36c9873d61Bc28C117BD470981Ef6647A685",
    "contractAddress": "0x3332f97497cf0e094C41FEAaA0312b1123F363eD",
    "transactionIndex": 0,
    "gasUsed": "1594809",
    "logsBloom": "0x
    "blockHash": "0xa9a4321c416670f3ce433ba7cd2e3f72de0d61ca2088d9fb5a8ee6ef15866991",
    "transactionHash": "0x40222b5a256c4e81f0255ad67cb9703a6d03f824bc68aa3bf6ba164483c9dfad",
    "logs": [],
    "blockNumber": 25056649,
    "cumulativeGasUsed": "1594809",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d3f787e27c62a8ce08222aa643483610",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ApproveContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ClearedBaseFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"DenyContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"GrantApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receipt\",\"type\":\"address\"}],\"name\":\"NewBaseFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RevokeApproval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"addBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"approveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"baseFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"_fees\",\"type\":\"tuple[]\"}],\"name\":\"calcuateFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct Fee[]\",\"name\":\"fees\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"clearBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"denyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grantApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"revokedApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721Unsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"internalType\":\"struct Sig\",\"name\":\"sig\",\"type\":\"tuple\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"updateSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Proxy contract to manage user token approvals\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addBaseFee(string,uint16,address,(bytes32,bytes32,uint8))\":{\"details\":\"update base fees\",\"params\":{\"label\":\"label of fee\",\"rate\":\"fees rate to add\",\"receiver\":\"receiver of fee to add\"}},\"approveContract(address,string,(bytes32,bytes32,uint8))\":{\"details\":\"Approve contract to call transfer functions\",\"params\":{\"_contract\":\"address of contract to approve\"}},\"calcuateFee(address,uint256,(uint16,address)[])\":{\"details\":\"caculates fee\",\"params\":{\"_collection\":\"collection address\",\"_fees\":\"requesting fee\",\"_tokenId\":\"id of token\"},\"returns\":{\"fees\":\"cauculated fee\"}},\"clearBaseFee((bytes32,bytes32,uint8))\":{\"details\":\"clears all base fee\"},\"denyContract(address,(bytes32,bytes32,uint8))\":{\"details\":\"Revoke approval of contract to call transfer functions\",\"params\":{\"_contract\":\"address of contract to revoke approval\"}},\"grantApproval()\":{\"details\":\"Allow contract to make transfers on-behalf of a specific user\"},\"initialize(address)\":{\"params\":{\"_signer\":\"signer address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeApproval()\":{\"details\":\"Block contract from making transfers on-behalf of a specific user\"},\"transferERC1155(address,address,address,uint256,uint256)\":{\"details\":\"Transfer ERC1155 token using `safeTransferFrom`\",\"params\":{\"amount\":\"amount\",\"collection\":\"address of the collection\",\"from\":\"address of the sender\",\"to\":\"address of the recipient\",\"tokenId\":\"tokenId\"}},\"transferERC20(address,address,address,uint256)\":{\"details\":\"Transfer ERC20 token\",\"params\":{\"amount\":\"amount\",\"from\":\"address of the sender\",\"to\":\"address of the recipient\",\"token\":\"address of the token\"}},\"transferERC721(address,address,address,uint256)\":{\"details\":\"Transfer ERC721 token using `safeTransferFrom`\",\"params\":{\"collection\":\"address of the collection\",\"from\":\"address of the sender\",\"to\":\"address of the recipient\",\"tokenId\":\"tokenId\"}},\"transferERC721Unsafe(address,address,address,uint256)\":{\"details\":\"Transfer ERC721 token using `transferFrom`\",\"params\":{\"collection\":\"address of the collection\",\"from\":\"address of the sender\",\"to\":\"address of the recipient\",\"tokenId\":\"tokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseFee(uint16,string,uint16,address,(bytes32,bytes32,uint8))\":{\"details\":\"update base fees\",\"params\":{\"id\":\"id of fee\",\"label\":\"label of fee\",\"rate\":\"fee rate\",\"receiver\":\"fee receiver\",\"sig\":\"signature of owner wallet\"}}},\"title\":\"ExecutionDelegate\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExecutionDelegate.sol\":\"ExecutionDelegate\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC2981.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface for the NFT Royalty Standard.\\n *\\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\\n *\\n * _Available since v4.5._\\n */\\ninterface IERC2981 is IERC165 {\\n    /**\\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\\n     */\\n    function royaltyInfo(\\n        uint256 tokenId,\\n        uint256 salePrice\\n    ) external view returns (address receiver, uint256 royaltyAmount);\\n}\\n\",\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] calldata accounts,\\n        uint256[] calldata ids\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/ExecutionDelegate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport {IERC1155} from \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\nimport {OwnableUpgradeable} from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport {IERC2981} from \\\"@openzeppelin/contracts/interfaces/IERC2981.sol\\\";\\n\\nimport {IExecutionDelegate} from \\\"./interfaces/IExecutionDelegate.sol\\\";\\nimport {Fee, Sig} from \\\"./libraries/Structs.sol\\\";\\n\\n/**\\n * @title ExecutionDelegate\\n * @dev Proxy contract to manage user token approvals\\n */\\ncontract ExecutionDelegate is IExecutionDelegate, OwnableUpgradeable {\\n  mapping(address => bool) public contracts;\\n  mapping(address => bool) public revokedApproval;\\n  mapping(address => uint256) public nonce;\\n\\n  address public signer;\\n\\n  Fee[] public baseFee;\\n\\n  modifier approvedContract() {\\n    require(contracts[msg.sender], \\\"Contract is not approved to make transfers\\\");\\n    _;\\n  }\\n\\n  event ApproveContract(address indexed _contract, string name);\\n  event DenyContract(address indexed _contract);\\n\\n  event RevokeApproval(address indexed user);\\n  event GrantApproval(address indexed user);\\n  event ClearedBaseFee();\\n  event NewBaseFee(uint16 id, string label, uint16 rate, address receipt);\\n\\n  /* Constructor (for ERC1967) */\\n  /// @param _signer signer address\\n  function initialize(address _signer) public initializer {\\n    __Ownable_init();\\n\\n    signer = _signer;\\n  }\\n\\n  modifier onlySuperAdmin(Sig calldata sig) {\\n    require(_validateSign(sig) || msg.sender == owner(), \\\"Owner sign is invalid\\\");\\n    nonce[_msgSender()]++;\\n    _;\\n  }\\n\\n  /**\\n   * @dev Approve contract to call transfer functions\\n   * @param _contract address of contract to approve\\n   */\\n  function approveContract(\\n    address _contract,\\n    string memory _name,\\n    Sig calldata sig\\n  ) external onlySuperAdmin(sig) {\\n    contracts[_contract] = true;\\n    emit ApproveContract(_contract, _name);\\n  }\\n\\n  /**\\n   * @dev Revoke approval of contract to call transfer functions\\n   * @param _contract address of contract to revoke approval\\n   */\\n  function denyContract(address _contract, Sig calldata sig) external onlySuperAdmin(sig) {\\n    contracts[_contract] = false;\\n    emit DenyContract(_contract);\\n  }\\n\\n  /**\\n   * @dev Block contract from making transfers on-behalf of a specific user\\n   */\\n  function revokeApproval() external {\\n    revokedApproval[msg.sender] = true;\\n    emit RevokeApproval(msg.sender);\\n  }\\n\\n  /**\\n   * @dev Allow contract to make transfers on-behalf of a specific user\\n   */\\n  function grantApproval() external {\\n    revokedApproval[msg.sender] = false;\\n    emit GrantApproval(msg.sender);\\n  }\\n\\n  function updateSigner(address _signer) external onlyOwner {\\n    signer = _signer;\\n  }\\n\\n  /**\\n   * @dev Transfer ERC721 token using `transferFrom`\\n   * @param collection address of the collection\\n   * @param from address of the sender\\n   * @param to address of the recipient\\n   * @param tokenId tokenId\\n   */\\n  function transferERC721Unsafe(\\n    address collection,\\n    address from,\\n    address to,\\n    uint256 tokenId\\n  ) external approvedContract {\\n    require(revokedApproval[from] == false, \\\"User has revoked approval\\\");\\n    IERC721(collection).transferFrom(from, to, tokenId);\\n  }\\n\\n  /**\\n   * @dev Transfer ERC721 token using `safeTransferFrom`\\n   * @param collection address of the collection\\n   * @param from address of the sender\\n   * @param to address of the recipient\\n   * @param tokenId tokenId\\n   */\\n  function transferERC721(\\n    address collection,\\n    address from,\\n    address to,\\n    uint256 tokenId\\n  ) external approvedContract {\\n    require(revokedApproval[from] == false, \\\"User has revoked approval\\\");\\n    IERC721(collection).safeTransferFrom(from, to, tokenId);\\n  }\\n\\n  /**\\n   * @dev Transfer ERC1155 token using `safeTransferFrom`\\n   * @param collection address of the collection\\n   * @param from address of the sender\\n   * @param to address of the recipient\\n   * @param tokenId tokenId\\n   * @param amount amount\\n   */\\n  function transferERC1155(\\n    address collection,\\n    address from,\\n    address to,\\n    uint256 tokenId,\\n    uint256 amount\\n  ) external approvedContract {\\n    require(revokedApproval[from] == false, \\\"User has revoked approval\\\");\\n    IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \\\"\\\");\\n  }\\n\\n  /**\\n   * @dev Transfer ERC20 token\\n   * @param token address of the token\\n   * @param from address of the sender\\n   * @param to address of the recipient\\n   * @param amount amount\\n   */\\n  function transferERC20(\\n    address token,\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external approvedContract returns (bool) {\\n    require(revokedApproval[from] == false, \\\"User has revoked approval\\\");\\n    return IERC20(token).transferFrom(from, to, amount);\\n  }\\n\\n  //////////////////\\n  // fee calculator logic\\n  /**\\n   * @dev caculates fee\\n   * @param _collection collection address\\n   * @param _fees requesting fee\\n   * @param _tokenId id of token\\n   * @return fees cauculated fee\\n   */\\n  function calcuateFee(\\n    address _collection,\\n    uint256 _tokenId,\\n    Fee[] calldata _fees\\n  ) external view returns (Fee[] memory fees) {\\n    fees = new Fee[](0);\\n    if (IERC165(_collection).supportsInterface(type(IERC2981).interfaceId)) {\\n      fees = new Fee[](_fees.length + baseFee.length + 1);\\n      (address receiver, uint256 royaltyAmount) = IERC2981(_collection).royaltyInfo(\\n        _tokenId,\\n        10000\\n      );\\n      fees[0] = Fee({recipient: payable(receiver), rate: uint16(royaltyAmount)});\\n      for (uint256 i = 0; i < _fees.length; i++) {\\n        fees[i + 1] = _fees[i];\\n      }\\n      for (uint256 i = 0; i < baseFee.length; i++) {\\n        fees[i + _fees.length + 1] = baseFee[i];\\n      }\\n    } else {\\n      fees = new Fee[](_fees.length + baseFee.length + 1);\\n      for (uint256 i = 0; i < _fees.length; i++) {\\n        fees[i] = _fees[i];\\n      }\\n      for (uint256 i = 0; i < baseFee.length; i++) {\\n        fees[i + _fees.length] = baseFee[i];\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev update base fees\\n   * @param id id of fee\\n   * @param label label of fee\\n   * @param rate fee rate\\n   * @param receiver fee receiver\\n   * @param sig signature of owner wallet\\n   */\\n  function updateBaseFee(\\n    uint16 id,\\n    string memory label,\\n    uint16 rate,\\n    address receiver,\\n    Sig calldata sig\\n  ) external onlySuperAdmin(sig) {\\n    require(baseFee.length > id, \\\"Invalid id\\\");\\n    baseFee[id] = Fee(rate, payable(receiver));\\n\\n    emit NewBaseFee(id, label, rate, receiver);\\n  }\\n\\n  /**\\n   * @dev update base fees\\n   * @param label label of fee\\n   * @param rate fees rate to add\\n   * @param receiver receiver of fee to add\\n   */\\n  function addBaseFee(\\n    string memory label,\\n    uint16 rate,\\n    address receiver,\\n    Sig calldata sig\\n  ) external onlySuperAdmin(sig) {\\n    Fee memory newFee = Fee({recipient: payable(receiver), rate: rate});\\n    baseFee.push(newFee);\\n\\n    emit NewBaseFee(uint16(baseFee.length - 1), label, rate, receiver);\\n  }\\n\\n  /**\\n   * @dev clears all base fee\\n   */\\n  function clearBaseFee(Sig calldata sig) external onlySuperAdmin(sig) {\\n    delete baseFee;\\n\\n    emit ClearedBaseFee();\\n  }\\n\\n  /**\\n   * @dev validate signature of contract owner\\n   * @param sig sign of owner\\n   */\\n  function _validateSign(Sig calldata sig) private view returns (bool) {\\n    bytes32 messageHash = keccak256(abi.encodePacked(_msgSender(), nonce[_msgSender()]));\\n\\n    bytes32 ethSignedMessageHash = keccak256(\\n      abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", messageHash)\\n    );\\n\\n    return signer == ecrecover(ethSignedMessageHash, sig.v, sig.r, sig.s);\\n  }\\n}\\n\",\"keccak256\":\"0x967aae7ebb21cc5788e254e0deaab7f74bc7e390003a284f80299aba3b944d35\",\"license\":\"MIT\"},\"contracts/interfaces/IExecutionDelegate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {Fee, Sig} from \\\"../libraries/Structs.sol\\\";\\n\\ninterface IExecutionDelegate {\\n  function contracts(address to) external view returns (bool);\\n\\n  function approveContract(address _contract, string memory _name, Sig calldata sig) external;\\n\\n  function denyContract(address _contract, Sig calldata sig) external;\\n\\n  function revokeApproval() external;\\n\\n  function grantApproval() external;\\n\\n  function transferERC721Unsafe(\\n    address collection,\\n    address from,\\n    address to,\\n    uint256 tokenId\\n  ) external;\\n\\n  function transferERC721(address collection, address from, address to, uint256 tokenId) external;\\n\\n  function transferERC1155(\\n    address collection,\\n    address from,\\n    address to,\\n    uint256 tokenId,\\n    uint256 amount\\n  ) external;\\n\\n  function transferERC20(\\n    address token,\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function calcuateFee(\\n    address _collection,\\n    uint256 _tokenId,\\n    Fee[] memory _fees\\n  ) external view returns (Fee[] memory fees);\\n}\\n\",\"keccak256\":\"0x9ed7bb6d91e779466d8f7431501ae19aa5ad14fe298af33c0acdfce3b80146af\",\"license\":\"MIT\"},\"contracts/libraries/Structs.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nenum Side {\\n  Buy,\\n  Sell\\n}\\n\\nenum SignatureVersion {\\n  Single,\\n  Bulk\\n}\\n\\nenum AssetType {\\n  ERC721,\\n  ERC1155\\n}\\n\\nstruct Fee {\\n  uint16 rate;\\n  address payable recipient;\\n}\\n\\nstruct Order {\\n  address trader;\\n  Side side;\\n  address matchingPolicy;\\n  address collection;\\n  uint256 tokenId;\\n  uint256 amount;\\n  address paymentToken;\\n  uint256 price;\\n  uint256 listingTime;\\n  /* Order expiration timestamp - 0 for oracle cancellations. */\\n  uint256 expirationTime;\\n  Fee[] fees;\\n  uint256 salt;\\n  bytes extraParams;\\n}\\n\\nstruct Input {\\n  Order order;\\n  uint8 v;\\n  bytes32 r;\\n  bytes32 s;\\n  bytes extraSignature;\\n  SignatureVersion signatureVersion;\\n  uint256 blockNumber;\\n}\\n\\nstruct Auction {\\n  AssetType assetType;\\n  address collection;\\n  uint256 tokenId;\\n  uint256 amount;\\n  address paymentToken;\\n  uint256 minPrice;\\n  uint256 minWinPercent;\\n  uint256 startTime;\\n  uint256 endTime;\\n  address owner;\\n  address lastBidder;\\n  uint256 bidPrice;\\n  Fee[] fees;\\n}\\n\\nstruct Sig {\\n  bytes32 r;\\n  bytes32 s;\\n  uint8 v;\\n}\\n\",\"keccak256\":\"0x206f5388a4a9c2a539d07e1fbfc7f0f4a22418e074736aeaa591a6af536b9de1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611be2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c806301b6eb0314610117578063238ac9331461012c57806325b4f64a1461015c5780632a312fe31461016f57806333578c7a146101a45780634a3e3a1f146101b757806369dc9ff3146101ea5780636ef91c721461020d57806370ae92d21461022d578063715018a61461025b57806371700f7f1461026357806374a9402e14610276578063789f93f6146102895780638da5cb5b1461029c57806390d02b3c146102a4578063a7ecd37e146102ac578063a8034df1146102bf578063a8a48414146102c7578063c4d66de8146102da578063ca72da8e146102ed578063da3e8ce414610300578063f2fde38b14610313575b600080fd5b61012a6101253660046114b5565b610326565b005b60685461013f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012a61016a3660046115a4565b6103e3565b61018261017d366004611626565b61054a565b6040805161ffff90931683526001600160a01b03909116602083015201610153565b61012a6101b236600461163f565b61057f565b6101da6101c5366004611662565b60666020526000908152604090205460ff1681565b6040519015158152602001610153565b6101da6101f8366004611662565b60656020526000908152604090205460ff1681565b61022061021b36600461167f565b610622565b604051610153919061170a565b61024d61023b366004611662565b60676020526000908152604090205481565b604051908152602001610153565b61012a610a68565b61012a610271366004611766565b610a7c565b61012a6102843660046117c6565b610b46565b61012a610297366004611821565b610c34565b61013f610d04565b61012a610d13565b61012a6102ba366004611662565b610d55565b61012a610d7f565b61012a6102d5366004611872565b610dbe565b61012a6102e8366004611662565b610ee4565b61012a6102fb366004611821565b611011565b6101da61030e366004611821565b6110a9565b61012a610321366004611662565b61118d565b8061033081611206565b80610353575061033e610d04565b6001600160a01b0316336001600160a01b0316145b6103785760405162461bcd60e51b815260040161036f906118e3565b60405180910390fd5b33600090815260676020526040812080549161039383611928565b90915550506001600160a01b038316600081815260656020526040808220805460ff19169055517f2b35b0a030b4f4cef0a9e8d01828235bb82a11ec4e37c11bd6d8770d9aafb17c9190a2505050565b806103ed81611206565b8061041057506103fb610d04565b6001600160a01b0316336001600160a01b0316145b61042c5760405162461bcd60e51b815260040161036f906118e3565b33600090815260676020526040812080549161044783611928565b909155505060695461ffff87161061048e5760405162461bcd60e51b815260206004820152600a602482015269125b9d985b1a59081a5960b21b604482015260640161036f565b60405180604001604052808561ffff168152602001846001600160a01b031681525060698761ffff16815481106104c7576104c7611941565b600091825260209182902083519101805493909201516001600160a01b031662010000026001600160b01b031990931661ffff909116179190911790556040517f83cd0831fbb6aa52b27dd0da185dc6de621a5c8a5ceeaf5ab862da1e6b9b651c9061053a90889088908890889061199d565b60405180910390a1505050505050565b6069818154811061055a57600080fd5b60009182526020909120015461ffff811691506201000090046001600160a01b031682565b8061058981611206565b806105ac5750610597610d04565b6001600160a01b0316336001600160a01b0316145b6105c85760405162461bcd60e51b815260040161036f906118e3565b3360009081526067602052604081208054916105e383611928565b909155506105f5905060696000611430565b6040517f387e35327f81a7d341fd6081651a5e0ea126e8119a1847de9075cf31875973de90600090a15050565b60408051600080825260208201909252606091610655565b61064261144e565b81526020019060019003908161063a5790505b506040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038616906301ffc9a790602401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c891906119db565b15610901576069546106da90836119fd565b6106e59060016119fd565b6001600160401b038111156106fc576106fc611502565b60405190808252806020026020018201604052801561073557816020015b61072261144e565b81526020019060019003908161071a5790505b5060405163152a902d60e11b815260048101869052612710602482015290915060009081906001600160a01b03881690632a55205a906044016040805180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190611a16565b9150915060405180604001604052808261ffff168152602001836001600160a01b0316815250836000815181106107e7576107e7611941565b602002602001018190525060005b8481101561085f5785858281811061080f5761080f611941565b9050604002018036038101906108259190611a44565b846108318360016119fd565b8151811061084157610841611941565b6020026020010181905250808061085790611928565b9150506107f5565b5060005b6069548110156108f9576069818154811061088057610880611941565b60009182526020918290206040805180820190915291015461ffff811682526201000090046001600160a01b031691810191909152846108c087846119fd565b6108cb9060016119fd565b815181106108db576108db611941565b602002602001018190525080806108f190611928565b915050610863565b505050610a60565b60695461090e90836119fd565b6109199060016119fd565b6001600160401b0381111561093057610930611502565b60405190808252806020026020018201604052801561096957816020015b61095661144e565b81526020019060019003908161094e5790505b50905060005b828110156109cf5783838281811061098957610989611941565b90506040020180360381019061099f9190611a44565b8282815181106109b1576109b1611941565b602002602001018190525080806109c790611928565b91505061096f565b5060005b606954811015610a5e57606981815481106109f0576109f0611941565b60009182526020918290206040805180820190915291015461ffff811682526201000090046001600160a01b03169181019190915282610a3085846119fd565b81518110610a4057610a40611941565b60200260200101819052508080610a5690611928565b9150506109d3565b505b949350505050565b610a70611325565b610a7a6000611384565b565b80610a8681611206565b80610aa95750610a94610d04565b6001600160a01b0316336001600160a01b0316145b610ac55760405162461bcd60e51b815260040161036f906118e3565b336000908152606760205260408120805491610ae083611928565b90915550506001600160a01b03841660008181526065602052604090819020805460ff19166001179055517fc3b068c64ebae27f0a33c3aa1bf750569fbc20e8fbb7574e6ae3e3b155c4670090610b38908690611aa0565b60405180910390a250505050565b3360009081526065602052604090205460ff16610b755760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03841660009081526066602052604090205460ff1615610bae5760405162461bcd60e51b815260040161036f90611afd565b604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050505050505050565b3360009081526065602052604090205460ff16610c635760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03831660009081526066602052604090205460ff1615610c9c5760405162461bcd60e51b815260040161036f90611afd565b604051632142170760e11b81526001600160a01b038516906342842e0e90610ccc90869086908690600401611b30565b600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b5050505050505050565b6033546001600160a01b031690565b33600081815260666020526040808220805460ff19166001179055517fdddeac663983b1e35153215a4578fecbb5921d12e660b3c4259aa7d9dbb9709f9190a2565b610d5d611325565b606880546001600160a01b0319166001600160a01b0392909216919091179055565b33600081815260666020526040808220805460ff19169055517f120d91a0121c2d5a7ce9638fce4bd262d4b443568fce40f681f50dca814a629a9190a2565b80610dc881611206565b80610deb5750610dd6610d04565b6001600160a01b0316336001600160a01b0316145b610e075760405162461bcd60e51b815260040161036f906118e3565b336000908152606760205260408120805491610e2283611928565b90915550506040805180820190915261ffff80861682526001600160a01b03808616602084019081526069805460018181018355600083905286517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143089092018054945190951662010000026001600160b01b0319909416919095161791909117909155547f83cd0831fbb6aa52b27dd0da185dc6de621a5c8a5ceeaf5ab862da1e6b9b651c91610ed191611b54565b87878760405161053a949392919061199d565b600054610100900460ff1615808015610f045750600054600160ff909116105b80610f1e5750303b158015610f1e575060005460ff166001145b610f815760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161036f565b6000805460ff191660011790558015610fa4576000805461ff0019166101001790555b610fac6113d6565b606880546001600160a01b0319166001600160a01b038416179055801561100d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b3360009081526065602052604090205460ff166110405760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03831660009081526066602052604090205460ff16156110795760405162461bcd60e51b815260040161036f90611afd565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610ccc90869086908690600401611b30565b3360009081526065602052604081205460ff166110d85760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03841660009081526066602052604090205460ff16156111115760405162461bcd60e51b815260040161036f90611afd565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd9061114190879087908790600401611b30565b6020604051808303816000875af1158015611160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118491906119db565b95945050505050565b611195611325565b6001600160a01b0381166111fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036f565b61120381611384565b50565b33600081815260676020908152604080832054815160609590951b6001600160601b03191685840152603480860191909152815180860390910181526054850190915280519101207b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6074840152609083018190529091829060b0016040516020818303038152906040528051906020012090506001818560400160208101906112af9190611b67565b604080516000815260208181018084529490945260ff909216908201528635606082015290860135608082015260a0016020604051602081039080840390855afa158015611301573d6000803e3d6000fd5b5050604051601f1901516068546001600160a01b0390811691161495945050505050565b3361132e610d04565b6001600160a01b031614610a7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113fd5760405162461bcd60e51b815260040161036f90611b8a565b610a7a600054610100900460ff166114275760405162461bcd60e51b815260040161036f90611b8a565b610a7a33611384565b50805460008255906000526020600020908101906112039190611465565b604080518082019091526000808252602082015290565b5b808211156114845780546001600160b01b0319168155600101611466565b5090565b6001600160a01b038116811461120357600080fd5b6000606082840312156114af57600080fd5b50919050565b600080608083850312156114c857600080fd5b82356114d381611488565b91506114e2846020850161149d565b90509250929050565b803561ffff811681146114fd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261152957600080fd5b81356001600160401b038082111561154357611543611502565b604051601f8301601f19908116603f0116810190828211818310171561156b5761156b611502565b8160405283815286602085880101111561158457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060e086880312156115bc57600080fd5b6115c5866114eb565b945060208601356001600160401b038111156115e057600080fd5b6115ec88828901611518565b9450506115fb604087016114eb565b9250606086013561160b81611488565b915061161a876080880161149d565b90509295509295909350565b60006020828403121561163857600080fd5b5035919050565b60006060828403121561165157600080fd5b61165b838361149d565b9392505050565b60006020828403121561167457600080fd5b813561165b81611488565b6000806000806060858703121561169557600080fd5b84356116a081611488565b93506020850135925060408501356001600160401b03808211156116c357600080fd5b818701915087601f8301126116d757600080fd5b8135818111156116e657600080fd5b8860208260061b85010111156116fb57600080fd5b95989497505060200194505050565b602080825282518282018190526000919060409081850190868401855b82811015611759578151805161ffff1685528601516001600160a01b0316868501529284019290850190600101611727565b5091979650505050505050565b600080600060a0848603121561177b57600080fd5b833561178681611488565b925060208401356001600160401b038111156117a157600080fd5b6117ad86828701611518565b9250506117bd856040860161149d565b90509250925092565b600080600080600060a086880312156117de57600080fd5b85356117e981611488565b945060208601356117f981611488565b9350604086013561180981611488565b94979396509394606081013594506080013592915050565b6000806000806080858703121561183757600080fd5b843561184281611488565b9350602085013561185281611488565b9250604085013561186281611488565b9396929550929360600135925050565b60008060008060c0858703121561188857600080fd5b84356001600160401b0381111561189e57600080fd5b6118aa87828801611518565b9450506118b9602086016114eb565b925060408501356118c981611488565b91506118d8866060870161149d565b905092959194509250565b60208082526015908201527413dddb995c881cda59db881a5cc81a5b9d985b1a59605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161193a5761193a611912565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561197d57602081850181015186830182015201611961565b506000602082860101526020601f19601f83011685010191505092915050565b600061ffff8087168352608060208401526119bb6080840187611957565b94166040830152506001600160a01b039190911660609091015292915050565b6000602082840312156119ed57600080fd5b8151801515811461165b57600080fd5b80820180821115611a1057611a10611912565b92915050565b60008060408385031215611a2957600080fd5b8251611a3481611488565b6020939093015192949293505050565b600060408284031215611a5657600080fd5b604051604081018181106001600160401b0382111715611a7857611a78611502565b604052611a84836114eb565b81526020830135611a9481611488565b60208201529392505050565b60208152600061165b6020830184611957565b6020808252602a908201527f436f6e7472616374206973206e6f7420617070726f76656420746f206d616b65604082015269207472616e736665727360b01b606082015260800190565b602080825260199082015278155cd95c881a185cc81c995d9bdad95908185c1c1c9bdd985b603a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b81810381811115611a1057611a10611912565b600060208284031215611b7957600080fd5b813560ff8116811461165b57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c6343000813000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101125760003560e01c806301b6eb0314610117578063238ac9331461012c57806325b4f64a1461015c5780632a312fe31461016f57806333578c7a146101a45780634a3e3a1f146101b757806369dc9ff3146101ea5780636ef91c721461020d57806370ae92d21461022d578063715018a61461025b57806371700f7f1461026357806374a9402e14610276578063789f93f6146102895780638da5cb5b1461029c57806390d02b3c146102a4578063a7ecd37e146102ac578063a8034df1146102bf578063a8a48414146102c7578063c4d66de8146102da578063ca72da8e146102ed578063da3e8ce414610300578063f2fde38b14610313575b600080fd5b61012a6101253660046114b5565b610326565b005b60685461013f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012a61016a3660046115a4565b6103e3565b61018261017d366004611626565b61054a565b6040805161ffff90931683526001600160a01b03909116602083015201610153565b61012a6101b236600461163f565b61057f565b6101da6101c5366004611662565b60666020526000908152604090205460ff1681565b6040519015158152602001610153565b6101da6101f8366004611662565b60656020526000908152604090205460ff1681565b61022061021b36600461167f565b610622565b604051610153919061170a565b61024d61023b366004611662565b60676020526000908152604090205481565b604051908152602001610153565b61012a610a68565b61012a610271366004611766565b610a7c565b61012a6102843660046117c6565b610b46565b61012a610297366004611821565b610c34565b61013f610d04565b61012a610d13565b61012a6102ba366004611662565b610d55565b61012a610d7f565b61012a6102d5366004611872565b610dbe565b61012a6102e8366004611662565b610ee4565b61012a6102fb366004611821565b611011565b6101da61030e366004611821565b6110a9565b61012a610321366004611662565b61118d565b8061033081611206565b80610353575061033e610d04565b6001600160a01b0316336001600160a01b0316145b6103785760405162461bcd60e51b815260040161036f906118e3565b60405180910390fd5b33600090815260676020526040812080549161039383611928565b90915550506001600160a01b038316600081815260656020526040808220805460ff19169055517f2b35b0a030b4f4cef0a9e8d01828235bb82a11ec4e37c11bd6d8770d9aafb17c9190a2505050565b806103ed81611206565b8061041057506103fb610d04565b6001600160a01b0316336001600160a01b0316145b61042c5760405162461bcd60e51b815260040161036f906118e3565b33600090815260676020526040812080549161044783611928565b909155505060695461ffff87161061048e5760405162461bcd60e51b815260206004820152600a602482015269125b9d985b1a59081a5960b21b604482015260640161036f565b60405180604001604052808561ffff168152602001846001600160a01b031681525060698761ffff16815481106104c7576104c7611941565b600091825260209182902083519101805493909201516001600160a01b031662010000026001600160b01b031990931661ffff909116179190911790556040517f83cd0831fbb6aa52b27dd0da185dc6de621a5c8a5ceeaf5ab862da1e6b9b651c9061053a90889088908890889061199d565b60405180910390a1505050505050565b6069818154811061055a57600080fd5b60009182526020909120015461ffff811691506201000090046001600160a01b031682565b8061058981611206565b806105ac5750610597610d04565b6001600160a01b0316336001600160a01b0316145b6105c85760405162461bcd60e51b815260040161036f906118e3565b3360009081526067602052604081208054916105e383611928565b909155506105f5905060696000611430565b6040517f387e35327f81a7d341fd6081651a5e0ea126e8119a1847de9075cf31875973de90600090a15050565b60408051600080825260208201909252606091610655565b61064261144e565b81526020019060019003908161063a5790505b506040516301ffc9a760e01b815263152a902d60e11b60048201529091506001600160a01b038616906301ffc9a790602401602060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c891906119db565b15610901576069546106da90836119fd565b6106e59060016119fd565b6001600160401b038111156106fc576106fc611502565b60405190808252806020026020018201604052801561073557816020015b61072261144e565b81526020019060019003908161071a5790505b5060405163152a902d60e11b815260048101869052612710602482015290915060009081906001600160a01b03881690632a55205a906044016040805180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190611a16565b9150915060405180604001604052808261ffff168152602001836001600160a01b0316815250836000815181106107e7576107e7611941565b602002602001018190525060005b8481101561085f5785858281811061080f5761080f611941565b9050604002018036038101906108259190611a44565b846108318360016119fd565b8151811061084157610841611941565b6020026020010181905250808061085790611928565b9150506107f5565b5060005b6069548110156108f9576069818154811061088057610880611941565b60009182526020918290206040805180820190915291015461ffff811682526201000090046001600160a01b031691810191909152846108c087846119fd565b6108cb9060016119fd565b815181106108db576108db611941565b602002602001018190525080806108f190611928565b915050610863565b505050610a60565b60695461090e90836119fd565b6109199060016119fd565b6001600160401b0381111561093057610930611502565b60405190808252806020026020018201604052801561096957816020015b61095661144e565b81526020019060019003908161094e5790505b50905060005b828110156109cf5783838281811061098957610989611941565b90506040020180360381019061099f9190611a44565b8282815181106109b1576109b1611941565b602002602001018190525080806109c790611928565b91505061096f565b5060005b606954811015610a5e57606981815481106109f0576109f0611941565b60009182526020918290206040805180820190915291015461ffff811682526201000090046001600160a01b03169181019190915282610a3085846119fd565b81518110610a4057610a40611941565b60200260200101819052508080610a5690611928565b9150506109d3565b505b949350505050565b610a70611325565b610a7a6000611384565b565b80610a8681611206565b80610aa95750610a94610d04565b6001600160a01b0316336001600160a01b0316145b610ac55760405162461bcd60e51b815260040161036f906118e3565b336000908152606760205260408120805491610ae083611928565b90915550506001600160a01b03841660008181526065602052604090819020805460ff19166001179055517fc3b068c64ebae27f0a33c3aa1bf750569fbc20e8fbb7574e6ae3e3b155c4670090610b38908690611aa0565b60405180910390a250505050565b3360009081526065602052604090205460ff16610b755760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03841660009081526066602052604090205460ff1615610bae5760405162461bcd60e51b815260040161036f90611afd565b604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050505050505050565b3360009081526065602052604090205460ff16610c635760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03831660009081526066602052604090205460ff1615610c9c5760405162461bcd60e51b815260040161036f90611afd565b604051632142170760e11b81526001600160a01b038516906342842e0e90610ccc90869086908690600401611b30565b600060405180830381600087803b158015610ce657600080fd5b505af1158015610cfa573d6000803e3d6000fd5b5050505050505050565b6033546001600160a01b031690565b33600081815260666020526040808220805460ff19166001179055517fdddeac663983b1e35153215a4578fecbb5921d12e660b3c4259aa7d9dbb9709f9190a2565b610d5d611325565b606880546001600160a01b0319166001600160a01b0392909216919091179055565b33600081815260666020526040808220805460ff19169055517f120d91a0121c2d5a7ce9638fce4bd262d4b443568fce40f681f50dca814a629a9190a2565b80610dc881611206565b80610deb5750610dd6610d04565b6001600160a01b0316336001600160a01b0316145b610e075760405162461bcd60e51b815260040161036f906118e3565b336000908152606760205260408120805491610e2283611928565b90915550506040805180820190915261ffff80861682526001600160a01b03808616602084019081526069805460018181018355600083905286517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143089092018054945190951662010000026001600160b01b0319909416919095161791909117909155547f83cd0831fbb6aa52b27dd0da185dc6de621a5c8a5ceeaf5ab862da1e6b9b651c91610ed191611b54565b87878760405161053a949392919061199d565b600054610100900460ff1615808015610f045750600054600160ff909116105b80610f1e5750303b158015610f1e575060005460ff166001145b610f815760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161036f565b6000805460ff191660011790558015610fa4576000805461ff0019166101001790555b610fac6113d6565b606880546001600160a01b0319166001600160a01b038416179055801561100d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b3360009081526065602052604090205460ff166110405760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03831660009081526066602052604090205460ff16156110795760405162461bcd60e51b815260040161036f90611afd565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610ccc90869086908690600401611b30565b3360009081526065602052604081205460ff166110d85760405162461bcd60e51b815260040161036f90611ab3565b6001600160a01b03841660009081526066602052604090205460ff16156111115760405162461bcd60e51b815260040161036f90611afd565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd9061114190879087908790600401611b30565b6020604051808303816000875af1158015611160573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118491906119db565b95945050505050565b611195611325565b6001600160a01b0381166111fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161036f565b61120381611384565b50565b33600081815260676020908152604080832054815160609590951b6001600160601b03191685840152603480860191909152815180860390910181526054850190915280519101207b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6074840152609083018190529091829060b0016040516020818303038152906040528051906020012090506001818560400160208101906112af9190611b67565b604080516000815260208181018084529490945260ff909216908201528635606082015290860135608082015260a0016020604051602081039080840390855afa158015611301573d6000803e3d6000fd5b5050604051601f1901516068546001600160a01b0390811691161495945050505050565b3361132e610d04565b6001600160a01b031614610a7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161036f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113fd5760405162461bcd60e51b815260040161036f90611b8a565b610a7a600054610100900460ff166114275760405162461bcd60e51b815260040161036f90611b8a565b610a7a33611384565b50805460008255906000526020600020908101906112039190611465565b604080518082019091526000808252602082015290565b5b808211156114845780546001600160b01b0319168155600101611466565b5090565b6001600160a01b038116811461120357600080fd5b6000606082840312156114af57600080fd5b50919050565b600080608083850312156114c857600080fd5b82356114d381611488565b91506114e2846020850161149d565b90509250929050565b803561ffff811681146114fd57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261152957600080fd5b81356001600160401b038082111561154357611543611502565b604051601f8301601f19908116603f0116810190828211818310171561156b5761156b611502565b8160405283815286602085880101111561158457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060e086880312156115bc57600080fd5b6115c5866114eb565b945060208601356001600160401b038111156115e057600080fd5b6115ec88828901611518565b9450506115fb604087016114eb565b9250606086013561160b81611488565b915061161a876080880161149d565b90509295509295909350565b60006020828403121561163857600080fd5b5035919050565b60006060828403121561165157600080fd5b61165b838361149d565b9392505050565b60006020828403121561167457600080fd5b813561165b81611488565b6000806000806060858703121561169557600080fd5b84356116a081611488565b93506020850135925060408501356001600160401b03808211156116c357600080fd5b818701915087601f8301126116d757600080fd5b8135818111156116e657600080fd5b8860208260061b85010111156116fb57600080fd5b95989497505060200194505050565b602080825282518282018190526000919060409081850190868401855b82811015611759578151805161ffff1685528601516001600160a01b0316868501529284019290850190600101611727565b5091979650505050505050565b600080600060a0848603121561177b57600080fd5b833561178681611488565b925060208401356001600160401b038111156117a157600080fd5b6117ad86828701611518565b9250506117bd856040860161149d565b90509250925092565b600080600080600060a086880312156117de57600080fd5b85356117e981611488565b945060208601356117f981611488565b9350604086013561180981611488565b94979396509394606081013594506080013592915050565b6000806000806080858703121561183757600080fd5b843561184281611488565b9350602085013561185281611488565b9250604085013561186281611488565b9396929550929360600135925050565b60008060008060c0858703121561188857600080fd5b84356001600160401b0381111561189e57600080fd5b6118aa87828801611518565b9450506118b9602086016114eb565b925060408501356118c981611488565b91506118d8866060870161149d565b905092959194509250565b60208082526015908201527413dddb995c881cda59db881a5cc81a5b9d985b1a59605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161193a5761193a611912565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561197d57602081850181015186830182015201611961565b506000602082860101526020601f19601f83011685010191505092915050565b600061ffff8087168352608060208401526119bb6080840187611957565b94166040830152506001600160a01b039190911660609091015292915050565b6000602082840312156119ed57600080fd5b8151801515811461165b57600080fd5b80820180821115611a1057611a10611912565b92915050565b60008060408385031215611a2957600080fd5b8251611a3481611488565b6020939093015192949293505050565b600060408284031215611a5657600080fd5b604051604081018181106001600160401b0382111715611a7857611a78611502565b604052611a84836114eb565b81526020830135611a9481611488565b60208201529392505050565b60208152600061165b6020830184611957565b6020808252602a908201527f436f6e7472616374206973206e6f7420617070726f76656420746f206d616b65604082015269207472616e736665727360b01b606082015260800190565b602080825260199082015278155cd95c881a185cc81c995d9bdad95908185c1c1c9bdd985b603a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b81810381811115611a1057611a10611912565b600060208284031215611b7957600080fd5b813560ff8116811461165b57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c6343000813000a",
  "devdoc": {
    "details": "Proxy contract to manage user token approvals",
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "addBaseFee(string,uint16,address,(bytes32,bytes32,uint8))": {
        "details": "update base fees",
        "params": {
          "label": "label of fee",
          "rate": "fees rate to add",
          "receiver": "receiver of fee to add"
        }
      },
      "approveContract(address,string,(bytes32,bytes32,uint8))": {
        "details": "Approve contract to call transfer functions",
        "params": {
          "_contract": "address of contract to approve"
        }
      },
      "calcuateFee(address,uint256,(uint16,address)[])": {
        "details": "caculates fee",
        "params": {
          "_collection": "collection address",
          "_fees": "requesting fee",
          "_tokenId": "id of token"
        },
        "returns": {
          "fees": "cauculated fee"
        }
      },
      "clearBaseFee((bytes32,bytes32,uint8))": {
        "details": "clears all base fee"
      },
      "denyContract(address,(bytes32,bytes32,uint8))": {
        "details": "Revoke approval of contract to call transfer functions",
        "params": {
          "_contract": "address of contract to revoke approval"
        }
      },
      "grantApproval()": {
        "details": "Allow contract to make transfers on-behalf of a specific user"
      },
      "initialize(address)": {
        "params": {
          "_signer": "signer address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "revokeApproval()": {
        "details": "Block contract from making transfers on-behalf of a specific user"
      },
      "transferERC1155(address,address,address,uint256,uint256)": {
        "details": "Transfer ERC1155 token using `safeTransferFrom`",
        "params": {
          "amount": "amount",
          "collection": "address of the collection",
          "from": "address of the sender",
          "to": "address of the recipient",
          "tokenId": "tokenId"
        }
      },
      "transferERC20(address,address,address,uint256)": {
        "details": "Transfer ERC20 token",
        "params": {
          "amount": "amount",
          "from": "address of the sender",
          "to": "address of the recipient",
          "token": "address of the token"
        }
      },
      "transferERC721(address,address,address,uint256)": {
        "details": "Transfer ERC721 token using `safeTransferFrom`",
        "params": {
          "collection": "address of the collection",
          "from": "address of the sender",
          "to": "address of the recipient",
          "tokenId": "tokenId"
        }
      },
      "transferERC721Unsafe(address,address,address,uint256)": {
        "details": "Transfer ERC721 token using `transferFrom`",
        "params": {
          "collection": "address of the collection",
          "from": "address of the sender",
          "to": "address of the recipient",
          "tokenId": "tokenId"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBaseFee(uint16,string,uint16,address,(bytes32,bytes32,uint8))": {
        "details": "update base fees",
        "params": {
          "id": "id of fee",
          "label": "label of fee",
          "rate": "fee rate",
          "receiver": "fee receiver",
          "sig": "signature of owner wallet"
        }
      }
    },
    "title": "ExecutionDelegate",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 503,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 506,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1172,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 10051,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "contracts",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10055,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "revokedApproval",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10059,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "nonce",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10061,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "signer",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 10065,
        "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
        "label": "baseFee",
        "offset": 0,
        "slot": "105",
        "type": "t_array(t_struct(Fee)15481_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Fee)15481_storage)dyn_storage": {
        "base": "t_struct(Fee)15481_storage",
        "encoding": "dynamic_array",
        "label": "struct Fee[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Fee)15481_storage": {
        "encoding": "inplace",
        "label": "struct Fee",
        "members": [
          {
            "astId": 15478,
            "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
            "label": "rate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 15480,
            "contract": "contracts/ExecutionDelegate.sol:ExecutionDelegate",
            "label": "recipient",
            "offset": 2,
            "slot": "0",
            "type": "t_address_payable"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}